[
  {
    "id": "wp-1-branch-isolation",
    "title": "WP-1 · Git branch isolation per task",
    "type": "story",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Add ShellRunner.git_checkout_branch(), re-wire DevOrchestrator.run_task_cycle() so every task executes on its own lightweight branch and is merged later by a coordinator."
  },
  {
    "id": "wp-2-merge-coordinator",
    "title": "WP-2 · Merge-Coordinator service",
    "type": "story",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "CLI script scripts/merge_queue.py that fast-forward merges completed task branches into main; marks tasks merge_conflict when needed; writes TaskRecord snapshots."
  },
  {
    "id": "wp-3-post-merge-gate",
    "title": "WP-3 · Post-merge test gate",
    "type": "story",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Automatically run full pytest on main after every successful merge; roll back (git revert) on regression.  Record failed_post_merge_test snapshot."
  },
  {
    "id": "wp-4-phase-guard-extension",
    "title": "WP-4 · Phase-guard extension (commit prerequisites)",
    "type": "micro",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "enforce_phase now requires review_passed + efficiency_passed + branch_isolated before git_commit; update unit tests."
  },
  {
    "id": "wp-5-cross-proc-lock",
    "title": "WP-5 · Cross-process file locks for backlog & record",
    "type": "story",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Use filelock (<file>.lock) with 10-s timeout in BacklogManager.save/load and TaskRecord._persist/_load.  Raise FileLockTimeoutError; add multiprocess test."
  },
  {
    "id": "wp-6-fastapi-events",
    "title": "WP-6 · FastAPI SSE / WebSocket event stream",
    "type": "story",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Backend service exposing /events that streams TaskRecord.save() JSON snapshots; add on_save callback in TaskRecord."
  },
  {
    "id": "wp-7-react-ui",
    "title": "WP-7 · React command-centre skeleton",
    "type": "epic",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Create ui/ (Vite + TypeScript). Pages: BacklogBoard, TaskDetail, LiveLog.  Data layer connects to WP-6 backend."
  },
  {
    "id": "wp-8-doc-linter",
    "title": "WP-8 · Doc / code drift linter",
    "type": "micro",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "tools/lint_docs.py verifies that canonical tables in docs match enums/constants in code; integrate into CI."
  },
  {
    "id": "hotfix-sha-guard",
    "title": "Hot-fix · SHA-guard against stale multi-file edits",
    "type": "micro",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "When commit succeeds, embed current before_sha into any remaining open tasks touching same file; fail fast on mismatch."
  },
  {
    "id": "cleanup-retire-deprecated-scripts",
    "title": "Clean-up · Retire scripts/auto_generate_patches.py & dead var/ artefacts",
    "type": "micro",
    "status": "open",
    "created_at": "2025-06-23T00:00:00Z",
    "description": "Delete obsolete script, remove residual var/ copies, ensure orchestrator ignores them."
  }
]